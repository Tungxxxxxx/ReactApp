{"ast":null,"code":"var _jsxFileName = \"E:\\\\HOC TAP\\\\Web\\\\ReactJs\\\\ReactApp\\\\src\\\\views\\\\todo\\\\TodoList.js\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\n// import { toast } from \"react-toastify\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Color from \"../HOC/Color.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: \"\",\n      arrTasks: [{\n        id: 1,\n        title: \"Task số 1\"\n      }, {\n        id: 2,\n        title: \"Task số 2\"\n      }, {\n        id: 3,\n        title: \"Task số 3\"\n      }],\n      editTask: {}\n    };\n    this.handleOnchangeTask = event => {\n      this.setState({\n        task: event.target.value\n      });\n    };\n    this.handleOnclickAdd = () => {\n      let taskObj = {\n        id: Math.floor(Math.random() * 1001),\n        title: this.state.task\n      };\n      this.setState({\n        task: \"\",\n        arrTasks: [...this.state.arrTasks, taskObj]\n      });\n      toast.success(\"Add success\");\n    };\n    this.handleOnClickDel = id => {\n      this.setState({\n        arrTasks: this.state.arrTasks.filter(item => item.id !== id)\n      });\n      toast.success(\"Delete success\");\n    };\n    this.handleOnClickEdit = item => {\n      if (Object.keys(this.state.editTask).length === 0) {\n        this.setState({\n          editTask: item\n        });\n      } else {\n        //Copy mảng arrTasks - Không nên sửa trực tiếp trên state\n        let arrTasksCopy = [...this.state.arrTasks];\n        //Lấy index phần tử cần sửa\n        let editIndex = arrTasksCopy.findIndex(task => task.id === item.id);\n        //Set title cho phần tử editIndex\n        if (arrTasksCopy[editIndex].title === this.state.editTask.title) {\n          //Set lại state\n          this.setState({\n            //Đạt lại giá trị empty cho editTask\n            editTask: {}\n          });\n          toast.info(\"No change\");\n        } else if (this.state.editTask.title === \"\") {\n          toast.error(\"Missing input task\");\n        } else {\n          arrTasksCopy[editIndex].title = this.state.editTask.title;\n          //Set lại state\n          this.setState({\n            arrTasks: arrTasksCopy,\n            //Đạt lại giá trị empty cho editTask\n            editTask: {}\n          });\n          toast.success(\"Edit success\");\n        }\n      }\n    };\n    this.handleOnchangeEditTask = (event, item) => {\n      this.setState({\n        editTask: {\n          id: item.id,\n          title: event.target.value\n        }\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Todo, {\n        task: this.state,\n        handleOnclickAdd: this.handleOnclickAdd,\n        handleOnClickDel: this.handleOnClickDel,\n        handleOnchangeTask: this.handleOnchangeTask,\n        handleOnClickEdit: this.handleOnClickEdit,\n        handleOnchangeEditTask: this.handleOnchangeEditTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 500,\n        hideProgressBar: false,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true,\n        theme: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default _c = Color(TodoList);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Todo","ToastContainer","toast","Color","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","Component","constructor","args","state","task","arrTasks","id","title","editTask","handleOnchangeTask","event","setState","target","value","handleOnclickAdd","taskObj","Math","floor","random","success","handleOnClickDel","filter","item","handleOnClickEdit","Object","keys","length","arrTasksCopy","editIndex","findIndex","info","error","handleOnchangeEditTask","render","children","fileName","_jsxFileName","lineNumber","columnNumber","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","_c","$RefreshReg$"],"sources":["E:/HOC TAP/Web/ReactJs/ReactApp/src/views/todo/TodoList.js"],"sourcesContent":["import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n// import { toast } from \"react-toastify\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Color from \"../HOC/Color.js\";\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    task: \"\",\r\n    arrTasks: [\r\n      { id: 1, title: \"Task số 1\" },\r\n      { id: 2, title: \"Task số 2\" },\r\n      { id: 3, title: \"Task số 3\" },\r\n    ],\r\n    editTask: {},\r\n  };\r\n  handleOnchangeTask = (event) => {\r\n    this.setState({\r\n      task: event.target.value,\r\n    });\r\n  };\r\n  handleOnclickAdd = () => {\r\n    let taskObj = {\r\n      id: Math.floor(Math.random() * 1001),\r\n      title: this.state.task,\r\n    };\r\n    this.setState({\r\n      task: \"\",\r\n      arrTasks: [...this.state.arrTasks, taskObj],\r\n    });\r\n    toast.success(\"Add success\");\r\n  };\r\n  handleOnClickDel = (id) => {\r\n    this.setState({\r\n      arrTasks: this.state.arrTasks.filter((item) => item.id !== id),\r\n    });\r\n    toast.success(\"Delete success\");\r\n  };\r\n  handleOnClickEdit = (item) => {\r\n    if (Object.keys(this.state.editTask).length === 0) {\r\n      this.setState({\r\n        editTask: item,\r\n      });\r\n    } else {\r\n      //Copy mảng arrTasks - Không nên sửa trực tiếp trên state\r\n      let arrTasksCopy = [...this.state.arrTasks];\r\n      //Lấy index phần tử cần sửa\r\n      let editIndex = arrTasksCopy.findIndex((task) => task.id === item.id);\r\n      //Set title cho phần tử editIndex\r\n      if (arrTasksCopy[editIndex].title === this.state.editTask.title) {\r\n        //Set lại state\r\n        this.setState({\r\n          //Đạt lại giá trị empty cho editTask\r\n          editTask: {},\r\n        });\r\n        toast.info(\"No change\");\r\n      } else if (this.state.editTask.title === \"\") {\r\n        toast.error(\"Missing input task\");\r\n      } else {\r\n        arrTasksCopy[editIndex].title = this.state.editTask.title;\r\n        //Set lại state\r\n        this.setState({\r\n          arrTasks: arrTasksCopy,\r\n          //Đạt lại giá trị empty cho editTask\r\n          editTask: {},\r\n        });\r\n        toast.success(\"Edit success\");\r\n      }\r\n    }\r\n  };\r\n  handleOnchangeEditTask = (event, item) => {\r\n    this.setState({\r\n      editTask: {\r\n        id: item.id,\r\n        title: event.target.value,\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Todo\r\n          task={this.state}\r\n          handleOnclickAdd={this.handleOnclickAdd}\r\n          handleOnClickDel={this.handleOnClickDel}\r\n          handleOnchangeTask={this.handleOnchangeTask}\r\n          handleOnClickEdit={this.handleOnClickEdit}\r\n          handleOnchangeEditTask={this.handleOnchangeEditTask}\r\n        />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={500}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          theme=\"light\"\r\n        />\r\n        {/* Same as */}\r\n        <ToastContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Color(TodoList);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}